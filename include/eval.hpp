#ifndef EVAL_HPP
#define EVAL_HPP

#include "board.hpp"

constexpr int piece_values[] = {
    100, 320, 330, 500, 900, 20000,   
    100, 320, 330, 500, 900, 20000  
};

const int pawn_table[64] = {
	0,   0,   0,   0,   0,   0,   0,   0,
	5,  10,  10, -20, -20,  10,  10,   5,
	5,  -5, -10,   0,   0, -10,  -5,   5,
	0,   0,   0,  20,  20,   0,   0,   0,
	5,   5,  10,  25,  25,  10,   5,   5,
	10, 10,  20,  30,  30,  20,  10,  10,
	50, 50,  50,  50,  50,  50,  50,  50,
	0,   0,   0,   0,   0,   0,   0,   0
};

const int knight_table[64] = {
	-50, -40, -30, -30, -30, -30, -40, -50,
	-40, -20,   0,   0,   0,   0, -20, -40,
	-30,   0,  10,  15,  15,  10,   0, -30,
	-30,   5,  15,  20,  20,  15,   5, -30,
	-30,   0,  15,  20,  20,  15,   0, -30,
	-30,   5,  10,  15,  15,  10,   5, -30,
	-40, -20,   0,   5,   5,   0, -20, -40,
	-50, -40, -30, -30, -30, -30, -40, -50
};

const int bishop_table[64] = {
	-20, -10, -10, -10, -10, -10, -10, -20,
	-10,   5,   0,   0,   0,   0,   5, -10,
	-10,  10,  10,  10,  10,  10,  10, -10,
	-10,   0,  10,  10,  10,  10,   0, -10,
	-10,   5,   5,  10,  10,   5,   5, -10,
	-10,   0,   5,  10,  10,   5,   0, -10,
	-10,   0,   0,   0,   0,   0,   0, -10,
	-20, -10, -10, -10, -10, -10, -10, -20
};

const int rook_table[64] = {
	0,   0,   0,   5,   5,   0,   0,   0,
  -5,   0,   0,   0,   0,   0,   0,  -5,
  -5,   0,   0,   0,   0,   0,   0,  -5,
  -5,   0,   0,   0,   0,   0,   0,  -5,
  -5,   0,   0,   0,   0,   0,   0,  -5,
  -5,   0,   0,   0,   0,   0,   0,  -5,
   5,  10,  10,  10,  10,  10,  10,   5,
   0,   0,   0,   0,   0,   0,   0,   0
};

const int queen_table[64] = {
	-20, -10, -10,  -5,  -5, -10, -10, -20,
	-10,   0,   0,   0,   0,   0,   0, -10,
	-10,   0,   5,   5,   5,   5,   0, -10,
	 -5,   0,   5,   5,   5,   5,   0,  -5,
	 -5,   0,   5,   5,   5,   5,   0,  -5,
	-10,   5,   5,   5,   5,   5,   0, -10,
	-10,   0,   5,   0,   0,   0,   0, -10,
	-20, -10, -10,  -5,  -5, -10, -10, -20
};

const int king_table[64] = {
	 20, 30, 35, 30, 30, 40, 50, 50,   
	 10, 15, 20, 25, 25, 20, 15, 10,   
	  0,  0,  5, 10, 10,  5,  0,  0,  
	-10, -5,  0,  0,  0,  0, -5, -10,  
	-20,-10,-10,-20,-20,-10,-10,-20,   
	-30,-20,-20,-30,-30,-20,-20,-30,   
	-40,-30,-30,-40,-40,-30,-30,-40,   
	-50,-40,-40,-50,-50,-40,-40,-50    
};


int eval(Board &board);
int scoreMove(const Move &m);
int pieceSquareTable(int piece, int square);
int mirror(int square);

#endif
